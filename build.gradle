group 'com.terry'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'spring-boot'

sourceCompatibility = 1.5

//buildscript 是项目本身所需要的资源
buildscript {
    ext {
        springBootVersion = '1.4.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    repositories { maven { url 'http://repo.thinkjoy.cn/content/groups/public/' } }
    mavenLocal()
    mavenCentral()
}

/**
 * The imported bom will control the version of the dependency.
 It will also control the version of its transitive dependencies if they’re listed in the bom.
  */
//dependencyManagement {
//    imports {
//        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.SR2'
//    }
//}

dependencies {
    compile 'org.springframework.cloud:spring-cloud-starter-config:1.2.1.RELEASE'
    compile 'org.springframework.cloud:spring-cloud-config-client:1.2.1.RELEASE'
    compile 'org.springframework.cloud:spring-cloud-config-server:1.2.1.RELEASE'
    compile 'org.springframework.cloud:spring-cloud-starter-eureka:1.2.2.RELEASE'
    compile 'org.aspectj:aspectjweaver:1.8.8'
    compile 'com.google.guava:guava:19.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task "createJavaProject" << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }

    /** 可选生成子文件夹 */
//    file("src/main/filters").mkdirs()
//    file("src/main/assembly").mkdirs()
//    file("src/main/config").mkdirs()
//    file("src/main/scripts").mkdirs()

    /** 填充文件，便于git提交 */
    file("src/main/java/cn/terry").mkdirs()
    file("src/main/java/cn/terry/package-info.java").createNewFile()
    file("src/main/resources").mkdirs()
    file("src/main/resources/spring.xml").createNewFile()

    file("src/test/java/cn/terry").mkdirs()
    file("src/test/java/cn/terry/package-info.java").createNewFile()
    file("src/test/resources/spring.xml").createNewFile()
}

